class Shape
{
    var id = none;
    var type = none;
    var updated = false;
    var scale = 1;
    var angle = 0;
    var color = "black";
    var background = none;

    func init(type)
    {
        this.type = type;
    }

    func update()
    {
        updated = true;
    }

    func str()
    {
        return str(this.dict());
    }

    func dict()
    {
        return {
            'id' : id, 
            'type' : type, 
            'scale' : scale,
            'angle' : angle,
            'color' : color,
            'background' : background
        };
    }
}

class Rect : Shape
{
    var x = 0;
    var y = 0;
    var width = 100;
    var height = 100;

    func init(x, y, width, height)
    {
        super.init('rect');
        if(x is not none)
            this.x = x;
        if(y is not none)
            this.y = y;
        if(width is not none)
            this.width = width;
        if(height is not none)
            this.height = height;
    }

    func dict()
    {
        var d = super.dict();
        d['x'] = x;
        d['y'] = y;
        d['width'] = width;
        d['height'] = height;
        return d;
    }
}

class Text : Shape
{
    var text = none;
    var x = 0;
    var y = 0;
    var size = 16;
    var font = "Arial";

    func init(text, size, x, y)
    {
        super.init('text');
        this.text = text;
        if(size is not none)
            this.size = size;
        if(x is not none)
            this.x = x;
        if(y is not none)
            this.y = y;
    }

    func dict()
    {
        var d = super.dict();
        d['x'] = x;
        d['y'] = y;
        d['text'] = text;
        d['size'] = size;
        return d;
    }
}

class Arc : Shape
{
    var x = 0;
    var y = 0;
    var width = 100;
    var height = 100;
    var startAngle = 0;
    var endAngle = 180;

    func init(start, end)
    {
        super.init('arc');
        if(start is not none)
            this.startAngle = start;
        if(end is not none)
            this.endAngle = end;
    }

    func dict()
    {
        var d = super.dict();
        d['x'] = x;
        d['y'] = y;
        d['width'] = width;
        d['height'] = height;
        d['startAngle'] = startAngle;
        d['endAngle'] = endAngle;
        return d;
    }
}

class Point : Shape
{
    var x = 0;
    var y = 0;

    func init(x, y)
    {
        super.init('point');
        if(x is not none)
            this.x = x;
        if(y is not none)
            this.y = y;
    }

    func dict()
    {
        var d = super.dict();
        d['x'] = x;
        d['y'] = y;
        return d;
    }
}

class Line : Shape
{
    var x1 = 0;
    var y1 = 0;
    var x2 = 100;
    var y2 = 100;

    func init(x1, y1, x2, y2)
    {
        super.init('line');
        if(x1 is not none)
            this.x1 = x1;
        if(y1 is not none)
            this.y1 = y1;
        if(x2 is not none)
            this.x2 = x2;
        if(y2 is not none)
            this.y2 = y2;
    }

    func dict()
    {
        var d = super.dict();
        d['x1'] = x1;
        d['y1'] = y1;
        d['x2'] = x2;
        d['y2'] = y2;
        return d;
    }
}

class Ellipse : Shape
{
    var x = 0;
    var y = 0;
    var width = 100;
    var height = 100;

    func init(x, y, width, height)
    {
        super.init('ellipse');
        if(x is not none)
            this.x = x;
        if(y is not none)
            this.y = y;
        if(width is not none)
            this.width = width;
        if(height is not none)
            this.height = height;
    }

    func dict()
    {
        var d = super.dict();
        d['x'] = x;
        d['y'] = y;
        d['width'] = width;
        d['height'] = height;
        return d;
    }
}

class Circle : Shape
{
    var x = 0;
    var y = 0;
    var radius = 100;

    func init(x, y, radius)
    {
        super.init('circle');
        if(x is not none)
            this.x = x;
        if(y is not none)
            this.y = y;
        if(radius is not none)
            this.radius = radius;
    }

    func dict()
    {
        var d = super.dict();
        d['x'] = x;
        d['y'] = y;
        d['radius'] = radius;
        return d;
    }
}