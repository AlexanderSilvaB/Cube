class Reflection
{
    // Reflection own methods
    static func create(name, arg)
    {
        var code = name + "(";
        var i = 0;
        var l = len(arg) - 1;
        for(var a in arg)
        {
            if(a is str)
                code += "'{}'".format(a);
            else
                code += a;
            if(i < l)
                code += ',';
            ++i;
        }
        code += ")";
        return eval(code);
    }

    static func classFields(klass)
    {
        return getFields(klass)
    }

    static func classMethods(klass)
    {
        return getMethods(klass)
    }

    // inherit members
    func [](key)
    {
        return getField(this, key);
    }

    func [=](key, value)
    {
        return setField(this, key, value);
    }

    func fields()
    {
        return getFields(this)
    }

    func methods()
    {
        return getMethods(this)
    }

    func className()
    {
        return getClassName(this)
    }

    func superName()
    {
        return getSuperName(this)
    }
}