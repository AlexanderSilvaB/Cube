println("Conway's Game of Life");
var w = int(input("Width: "));
var h = int(input("Height: "));
var ite = int(input("Iteractions: "));

var sz = w*h;
var map = make('list', sz, 0);


func createExploder(map, w, h)
{
    var minX = int(w/2) - int(5 / 2);
    var minY = int(h/2) - int(5 / 2);
    var maxX = minX + 4;
    var maxY = minY + 4;
    
    for(var i = minY; i <= maxY; ++i)
    {
        for(var j = minX; j <= maxX; ++j)
        {
            if(j == minX or j == maxX)
            {
                var index = i * w + j;
                map[index] = 1;
            }
        }
    }

    map[minY*w + minX + 2] = 1;
    map[maxY*w + minX + 2] = 1;
}

func neigh(map, x, y, w, h)
{
    var n = 0;
    var mx = x-1;
    var Mx = x+1;
    var my = y-1;
    var My = y+1;

    for(var i = my; i <= My; ++i)
    {
        if(i >= 0 and i < h)
        {
            for(var j = mx; j <= Mx; ++j)
            {
                if(j >= 0 and j < w)
                {
                    if(i != y or j != x)
                    {
                        if(map[i*w + j] > 0)
                        {
                            n = n + 1;
                        }
                    }
                }
            }
        }
    }

    return n;
}


func update(map, w, h)
{
    for (var y = 0; y < h; ++y)
    {
        for(var x = 0; x < w; ++x)
        {
            var n = neigh(map, x, y, w, h);
            var i = y*w + x;
            if(n < 2)
            {
                map[i] = 0;
            }
            if(n > 3)
            {
                map[i] = 0;
            }            
            if(n == 3)
            {
                map[i] = 1;
            }
        }
    }
}


func show(map, w, h)
{
    for (var y = 0; y < h; ++y)
    {
        for(var x = 0; x < w; ++x)
        {
            print(map[y*w + x]);
        }
        println();
    }
}

println('Creating exploder...');
createExploder(map, w, h);

println('Starting');

println("P: 0");
show(map, w, h);
//for(p in 1:ite)

for(var p = 1; p < ite; ++p)
{
    update(map, w, h);
    println("P: ", p);
    show(map, w, h);
}
