// In cube, tasks are just like any other functions
// Here we define a function named 'task'
func task(count, model)
{
    var start = clock();
    for(var i in 0:count)
    {
        print(model.format(i));
    }
    return clock() - start;
}

// As 'task' is a function, we can call it
task(20, 'x{}x');

// To run a function as a task, we use the 'async' before the function call
async task(20, '[{}]');

// If we need to manipulate the task, we can use the returned variable
var t2 = async task(20, '({})');

// If we want to wait for some task to finish and get its results, we use 'await' before the task
var elapsed = await t2;
println("\nElapsed: ", elapsed, 's');

// We can abort a running task at any time by using the 'abort' keyword followed by the task name
var t3 = async task(200, '<{}>');
wait(1);
abort t3;
